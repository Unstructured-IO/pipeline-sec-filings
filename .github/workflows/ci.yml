name: CI

on:
  # NOTE(robinson) - We are limiting when we run CI avoid exceeding our 2,000 min/month limt.
  # We can switch to running on push if we make this repo public or are fine with
  # paying for CI minutes.
  push:
    branches: [ main , core-140/ci-add-shellcheck]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: 3.8

jobs:
  setup:
    runs-on: ubuntu-latest
    env:
      NLTK_DATA: ${{ github.workspace }}/nltk_data
    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      id: virtualenv-cache
      with:
        path: |
          .venv
        key: ci-venv-${{ hashFiles('requirements/*.txt') }}
    # NOTE(robinson) - We only need the SSH key setup until the unstructured
    # and unstructured_api_tools repos are made public
    - name: Setup SSH keys
      if: steps.virtualenv-cache.outputs.cache-hit != 'true'
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 400 ~/.ssh/id_rsa
        echo "$SSH_PUBLIC_KEY" > ~/.ssh/id_rsa.pub
        echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
      env:
        SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
        SSH_PUBLIC_KEY: ${{secrets.SSH_PUBLIC_KEY}}
        SSH_KNOWN_HOSTS: ${{secrets.SSH_KNOWN_HOSTS}}
    - name: Setup virtual environment (no cache hit)
      if: steps.virtualenv-cache.outputs.cache-hit != 'true'
      run: |
        python${{ env.PYTHON_VERSION }} -m venv .venv
        source .venv/bin/activate
        make install-ci
    - uses: actions/cache@v3
      id: nltk-cache
      with:
        path: /home/runner/nltk_data
        key: ci-nltk-${{ hashFiles('requirements/*.txt') }}
    - name: Download NLTK (no cache hit)
      if: steps.nltk-cache.outputs.cache-hit != 'true'
      run: |
        source .venv/bin/activate
        make install-nltk-models

  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      id: virtualenv-cache
      with:
        path: |
          .venv
        key: ci-venv-${{ hashFiles('requirements/*.txt') }}
    - name: Lint
      run: |
        source .venv/bin/activate
        make check

  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: ShellCheck
        uses: ludeeus/action-shellcheck@master

  test:
    runs-on: ubuntu-latest
    env:
      NLTK_DATA: ${{ github.workspace }}/nltk_data
    needs: [setup, lint]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      id: virtualenv-cache
      with:
        path: |
          .venv
        key: ci-venv-${{ hashFiles('requirements/*.txt') }}
    - uses: actions/cache@v3
      id: nltk-cache
      with:
        path: /home/runner/nltk_data
        key: ci-nltk-${{ hashFiles('requirements/*.txt') }}
    - name: Run core tests 
      run: |
        source .venv/bin/activate
        make test
        make check-coverage
    - name: Run sample SEC documents tests
      run: |
        source .venv/bin/activate
        make dl-test-artifacts
        make test-sample-docs

  changelog:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - if: github.ref != 'refs/heads/main'
      uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: |
          src:
            - 'doc_recipe/**'
            - 'recipe-notebooks/**'

    - if: steps.changes.outputs.src == 'true' && github.ref != 'refs/heads/main'
      uses: dangoslen/changelog-enforcer@v3

  api_consistency:
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      id: virtualenv-cache
      with:
        path: |
          .venv
        key: ci-venv-${{ hashFiles('requirements/*.txt') }}
    - name: API Consistency
      run: |
        source .venv/bin/activate
        make api-check
